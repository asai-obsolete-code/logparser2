#!/bin/sh
#|-*- mode:lisp -*-|#
#| <Put a one-line description here>
exec ros -Q -- $0 "$@"
|#

;;;;

(load "common.lisp")
(load "store.lisp")
(in-package :ros.script.plot)

(defun parse-pathname (file)
  (ematch file
    ((pathname :directory (last 3
                                tag
                                (split* "-"
                                        (ipcyear ipcyear)
                                        _ _ heuristics algorithm default-tiebreaking queue _ date)
                                domain)
               :name      (split* "\\." (problem problem) _)
               :type      "out")
     (list* 'experiment
            :date (apply #'encode-universal-time
                         (reverse (mapcar #'read-from-string date)))
            (initargs tag
                      domain problem ipcyear
                      algorithm heuristics queue default-tiebreaking)))))

(defun main (&rest files)
  (my-connect "db.sqlite")
  (set-pragma)
  (mapcar #'ensure-table-exists '(tag domain algorithm heuristics default-tiebreaking queue experiment ipcyear))
  (setf *kernel* (make-kernel (read-from-string (uiop:run-program "grep processor /proc/cpuinfo | wc -l" :output :string))))
  (let ((t1 (get-internal-real-time)))
    (let ((results (remove nil (time (pmapcar (lambda (file)
                                                (parse (pathname file) #'parse-pathname))
                                              files)))))
      (time
       (with-transaction *connection*
         (map nil #'update-dao results)))
      (let ((duration (float (/ (- (get-internal-real-time) t1) internal-time-units-per-second))))
        (format t "~%--------- ~a seconds for ~a inserts: ~a inserts/sec.~%"
                duration (length results) (/ (length results)
                                             (max duration (/ internal-time-units-per-second))))))))
